# Задачи и решения/Problems and Solutions

Решения предоставлены Perniciousness.
В этом репозитории собраны задания, сгенерированные моделью ChatGPT, и их решения. Эти задания предназначены для обучающихся, присоединившихся к группе, где ChatGPT используется для формирования задач различной сложности и закрепления полученных знаний на практике.

---

Solutions provided by Perniciousness.
This repository contains tasks generated by the ChatGPT model and their solutions. These tasks are intended for learners who have joined a group where ChatGPT is used to create tasks of different difficulty levels and reinforce the knowledge acquired in practice.

---
---

## Используемые технологии/Technology used

- Java

## Структура репозитория/Repository structure

Каждая задача и ее решение размещены в отдельной папке, названной по соответствующей теме задачи.

```batch
├── Тема 1
│   ├── Задача 1
│   │   ├── Задание.md
│   │   └── Решение.java
│   ├── Задача 2
│   │   ├── Задание.md
│   │   └── Решение
│   │       ├── Часть 1.java
│   │       ├── Часть 2.java
│   │       └── Часть 3.java
│   └── ...
├── Тема 2
│   ├── Задача 1
│   │   ├── Задание.md
│   │   └── Решение.java
│   ├── Задача 2
│   │   ├── Задание.md
│   │   └── Решение
│   │       └── ...
│   └── ...
└── ...
```

Каждая папка с задачей обычно содержит два файла: `Задание.md` и `Решение.java`. Файл `Задание.md` содержит постановку задачи, а файл `Решение.java` - ее решение. Если решение по каким-либо причинам невозможно вместить в один файл, то `Решение.java` заменяется на файл с необходимым для решения задания файлов - частей решения.

---

Each task and its solution are placed in a separate folder named after the corresponding task topic.

├── Topic 1
│   ├── Task 1
│   │   ├── Task.md
│   │   └── Solution.java
│   ├── Task 2
│   │   ├── Task.md
│   │   └── Solution
│   │       ├── Part 1.java
│   │       ├── Part 2.java
│   │       └── Part 3.java
│   └── ...
├── Topic 2
│   ├── Task 1
│   │   ├── Task.md
│   │   └── Solution.java
│   ├── Task 2
│   │   ├── Task.md
│   │   └── Solution
│   │       └── ...
│   └── ...
└── ...

Each task folder usually contains two files: Task.md and Solution.java. Task.md file contains the task description, and Solution.java file contains its solution. If the solution cannot fit into one file for some reason, Solution.java is replaced with a file containing the necessary solution files - solution parts.

---
---

## Как использовать данный репозиторий/How to use this repository

Вы можете использовать эти задания и решения для самостоятельного изучения или для организации группового обучения.

1. Склонируйте репозиторий на свой компьютер:

   ```git
   git clone https://github.com/example/repo.git
   ```

2. Перейдите в папку с нужной темой и выберите интересующие вас задания.

3. Откройте файл `Задание.md`, чтобы прочитать постановку задачи.

4. (Опционально) Решите задачу самостоятельно.

5. Откройте файл `Решение.java` или папку с аналогичным наименованием, чтобы ознакомиться с решением задачи.

---

You can use these tasks and solutions for self-learning or for organizing group learning.

1. Clone the repository to your computer:

   ```git
   git clone https://github.com/example/repo.git
   ```

2. Navigate to the folder with the desired topic and select the tasks you are interested in.

3. Open the Task.md file to read the task description.

4. (Optional) Solve the task on your own.

5. Open the Solution(.java) file/folder to review the task solution.

---
---

## Как добавлять новые задания/How to add new tasks

Если вы хотите добавить новые задания, следуйте этим шагам:

1. Создайте новую папку с названием соответствующей темы, если ее еще нет:

   ```batch
   mkdir Тема N
   ```

2. Внутри папки создайте новую папку с названием задачи:

   ```batch
   cd Тема N
   mkdir Задача M
   ```

3. Внутри папки задачи создайте файл `Задание.md` и запишите в него постановку задачи.

4. (Опционально) Создайте файл `Решение.java` и запишите в него своё решение задачи.

5. Добавьте все изменения и закоммитьте их:

   ```git
   git add .
   git commit -m "Добавлено задание (и решение/на выполнение Алексеем) для Темы N - Задача M"
   ```

6. Отправьте изменения на удаленный репозиторий:

   ```git
   git push origin master
   ```

---

If you want to add new tasks, follow these steps:

1. Create a new folder with the name of the corresponding topic if it doesn't exist yet:

   ```batch
   mkdir Topic N
   ```

2. Inside the topic folder, create a new folder with the name of the task:

   ```batch
   cd Topic N
   mkdir Task M
   ```

3. Inside the task folder, create a Task.md file and write the task description in it.

4. (Optional) Create a Solution.java file and write your task solution in it.

5. Add all changes and commit them:

   ```git
   git add .
   git commit -m "Added task (and solution/assigned to Alexey) for Topic N - Task M"
   ```

6. Push the changes to the remote repository:

   ```git
   git push origin master
   ```

---
---

## Вклад/Contributions

Вы можете внести свой вклад в проект, предложив новые задания или улучшив существующие. Чтобы внести свой вклад, выполните следующие действия:

1. Форкните репозиторий.

2. Создайте новую ветку для внесения изменений:

   ```git
   git checkout -b my-new-feature
   ```

3. Внесите необходимые изменения.

4. Выполните коммит и закоммитьте изменения:

   ```git
   git add .
   git commit -m "Добавлено новое задание"
   ```

5. Отправьте изменения в свой форк:

   ```git
   git push origin my-new-feature
   ```

6. Создайте pull request в основной репозиторий.

---

You can contribute to the project by suggesting new tasks or improving existing ones. To contribute, follow these steps:

1. Fork the repository.

2. Create a new branch for your changes:

   ```git
   git checkout -b my-new-feature
   ```

3. Make the necessary changes.

4. Commit and commit the changes:

   ```git
   git add .
   git commit -m "Added a new task"
   ```

5. Push the changes to your fork:

   ```git
   git push origin my-new-feature
   ```

6. Create a pull request in the main repository.

---
---

## Лицензия/License

MIT License

Copyright (c) 2021 Othneil Drew

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
